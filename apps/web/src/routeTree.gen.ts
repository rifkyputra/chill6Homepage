/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as ServicesRouteImport } from './routes/services'
import { Route as OrdersRouteImport } from './routes/orders'
import { Route as MemberRouteImport } from './routes/member'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as CalendarRouteImport } from './routes/calendar'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RunaIndexRouteImport } from './routes/runa/index'
import { Route as RunaTokoRouteImport } from './routes/runa/toko'
import { Route as RunaSubTncRouteImport } from './routes/runa/sub/tnc'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const ServicesRoute = ServicesRouteImport.update({
  id: '/services',
  path: '/services',
  getParentRoute: () => rootRouteImport,
} as any)
const OrdersRoute = OrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => rootRouteImport,
} as any)
const MemberRoute = MemberRouteImport.update({
  id: '/member',
  path: '/member',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const CalendarRoute = CalendarRouteImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RunaIndexRoute = RunaIndexRouteImport.update({
  id: '/runa/',
  path: '/runa/',
  getParentRoute: () => rootRouteImport,
} as any)
const RunaTokoRoute = RunaTokoRouteImport.update({
  id: '/runa/toko',
  path: '/runa/toko',
  getParentRoute: () => rootRouteImport,
} as any)
const RunaSubTncRoute = RunaSubTncRouteImport.update({
  id: '/runa/sub/tnc',
  path: '/runa/sub/tnc',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/calendar': typeof CalendarRoute
  '/contact': typeof ContactRoute
  '/member': typeof MemberRoute
  '/orders': typeof OrdersRoute
  '/services': typeof ServicesRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/runa/toko': typeof RunaTokoRoute
  '/runa': typeof RunaIndexRoute
  '/runa/sub/tnc': typeof RunaSubTncRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/calendar': typeof CalendarRoute
  '/contact': typeof ContactRoute
  '/member': typeof MemberRoute
  '/orders': typeof OrdersRoute
  '/services': typeof ServicesRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/runa/toko': typeof RunaTokoRoute
  '/runa': typeof RunaIndexRoute
  '/runa/sub/tnc': typeof RunaSubTncRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/calendar': typeof CalendarRoute
  '/contact': typeof ContactRoute
  '/member': typeof MemberRoute
  '/orders': typeof OrdersRoute
  '/services': typeof ServicesRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/runa/toko': typeof RunaTokoRoute
  '/runa/': typeof RunaIndexRoute
  '/runa/sub/tnc': typeof RunaSubTncRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/calendar'
    | '/contact'
    | '/member'
    | '/orders'
    | '/services'
    | '/sign-in'
    | '/sign-up'
    | '/runa/toko'
    | '/runa'
    | '/runa/sub/tnc'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/calendar'
    | '/contact'
    | '/member'
    | '/orders'
    | '/services'
    | '/sign-in'
    | '/sign-up'
    | '/runa/toko'
    | '/runa'
    | '/runa/sub/tnc'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/calendar'
    | '/contact'
    | '/member'
    | '/orders'
    | '/services'
    | '/sign-in'
    | '/sign-up'
    | '/runa/toko'
    | '/runa/'
    | '/runa/sub/tnc'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  CalendarRoute: typeof CalendarRoute
  ContactRoute: typeof ContactRoute
  MemberRoute: typeof MemberRoute
  OrdersRoute: typeof OrdersRoute
  ServicesRoute: typeof ServicesRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
  RunaTokoRoute: typeof RunaTokoRoute
  RunaIndexRoute: typeof RunaIndexRoute
  RunaSubTncRoute: typeof RunaSubTncRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/services': {
      id: '/services'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ServicesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/orders': {
      id: '/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/member': {
      id: '/member'
      path: '/member'
      fullPath: '/member'
      preLoaderRoute: typeof MemberRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/calendar': {
      id: '/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof CalendarRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/runa/': {
      id: '/runa/'
      path: '/runa'
      fullPath: '/runa'
      preLoaderRoute: typeof RunaIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/runa/toko': {
      id: '/runa/toko'
      path: '/runa/toko'
      fullPath: '/runa/toko'
      preLoaderRoute: typeof RunaTokoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/runa/sub/tnc': {
      id: '/runa/sub/tnc'
      path: '/runa/sub/tnc'
      fullPath: '/runa/sub/tnc'
      preLoaderRoute: typeof RunaSubTncRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  CalendarRoute: CalendarRoute,
  ContactRoute: ContactRoute,
  MemberRoute: MemberRoute,
  OrdersRoute: OrdersRoute,
  ServicesRoute: ServicesRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
  RunaTokoRoute: RunaTokoRoute,
  RunaIndexRoute: RunaIndexRoute,
  RunaSubTncRoute: RunaSubTncRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
